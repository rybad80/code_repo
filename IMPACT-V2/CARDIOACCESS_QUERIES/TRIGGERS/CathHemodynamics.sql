/*
PENDING IMPORT ID LEGEND
	0 = IMPORT SUCCESSFUL
	1 = SOURCE RECORD WAS UPDATED AND WAITING FOR DATA UPLOAD TO DESTINATION DB
	2 = NO MATCHING CASE EXISTS IN DESTINATION DB (CASES.EMREventID)
	3 = ERROR UPDATING DESTINATION RECORD
	4 = ERROR INSERTING DESTINATION RECORD
*/

CREATE TRIGGER TR_CHOP_IMPACT_CATHHEMODYNAMICS ON CHOP_IMPACT_CATHHEMODYNAMICS
AFTER UPDATE, INSERT
AS

DECLARE @i int 
DECLARE @numrows int 
DECLARE @EventID int, @DBVrsn varchar(5), @EMREventID int
DECLARE @CathCaseList TABLE (CathID int, EMREventID int, DBVrsn varchar(5), RowID int)
DECLARE @ErrMsg nvarchar(4000), @ErrSeverity int


							
	SET NOCOUNT ON 
	
	INSERT INTO @CathCaseList(CathID, EMREventID, DBVrsn, RowID)
	SELECT CathID, CATH_SRC.SURG_ENC_ID, h.IMPACTDataVrsn , ROW_NUMBER() OVER (ORDER BY CathID) 
	FROM [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC INNER JOIN dbo.CathData C ON CATH_SRC.SURG_ENC_ID = C.EMREventID 
	                                                 INNER JOIN dbo.Hospitalization H on C.HospID = H.HospitalizationID
	WHERE PendingImport IN (1,2)   --This is to test an individual record
	--and emreventid = 2059350625
	ORDER BY CathID
		
	SELECT @numrows = @@RowCount, @i = 1
	WHILE (@i <= @numrows) 
		BEGIN
			SELECT @EventID = CathID, @DBVrsn = DBVrsn, @EMREventID = EMREventID FROM @CathCaseList AC WHERE AC.RowID = @i

			IF EXISTS(SELECT ASD.CathID FROM CathHemodynamics ASD WHERE ASD.CathID = @EventID)  
				BEGIN
					BEGIN TRY
					   BEGIN
						--BEGIN THE TRANSACTION
						BEGIN TRAN
							--UPDATE THE TARGET RECORD
							UPDATE CATH_TRGT
							SET CATH_TRGT.SYSTEMICARTSATNA =CATH_SRC.SYSTEMICARTSATNA ,
								CATH_TRGT.SYSTEMICARTSAT =CATH_SRC.SYSTEMICARTSAT ,
								CATH_TRGT.MIXVENSATNA =CATH_SRC.MIXVENSATNA ,
								CATH_TRGT.MIXVENSAT =CATH_SRC.MIXVENSAT ,
								CATH_TRGT.SYSTEMVENTSYSPRESNA =CATH_SRC.SYSTEMVENTSYSPRESNA ,
								CATH_TRGT.SYSTEMVENTSYSPRES =CATH_SRC.SYSTEMVENTSYSPRES ,
								CATH_TRGT.SYSTEMVENTENDDIAPRESNA =CATH_SRC.SYSTEMVENTENDDIAPRESNA ,
								CATH_TRGT.SYSTEMVENTENDDIAPRES =CATH_SRC.SYSTEMVENTENDDIAPRES ,
								CATH_TRGT.SYSTEMSYSBPNA =CATH_SRC.SYSTEMSYSBPNA ,
								CATH_TRGT.SYSTEMSYSBP =CATH_SRC.SYSTEMSYSBP ,
								CATH_TRGT.SYSTEMDIABPNA =CATH_SRC.SYSTEMDIABPNA ,
								CATH_TRGT.SYSTEMDIABP =CATH_SRC.SYSTEMDIABP ,
								CATH_TRGT.SYSTEMMEANBPNA =CATH_SRC.SYSTEMMEANBPNA ,
								CATH_TRGT.SYSTEMMEANBP =CATH_SRC.SYSTEMMEANBP ,
								CATH_TRGT.PULMARTSYSPRESNA =CATH_SRC.PULMARTSYSPRESNA ,
								CATH_TRGT.PULMARTSYSPRES =CATH_SRC.PULMARTSYSPRES ,
								CATH_TRGT.PULMARTMEANPRESNA =CATH_SRC.PULMARTMEANPRESNA ,
								CATH_TRGT.PULMARTMEANPRES =CATH_SRC.PULMARTMEANPRES ,
								CATH_TRGT.PULMVENTSYSPRESNA =CATH_SRC.PULMVENTSYSPRESNA ,
								CATH_TRGT.PULMVENTSYSPRES =CATH_SRC.PULMVENTSYSPRES ,
								CATH_TRGT.PULMVASCRESTINDNA =CATH_SRC.PULMVASCRESTINDNA ,
								CATH_TRGT.PULMVASCRESTIND =CATH_SRC.PULMVASCRESTIND ,
								CATH_TRGT.CARDINDNA =CATH_SRC.CARDINDNA ,
								CATH_TRGT.CARDIND =CATH_SRC.CARDIND ,
								CATH_TRGT.QPQSRATIONA =CATH_SRC.QPQSRATIONA ,
								CATH_TRGT.QPQSRATIO =CATH_SRC.QPQSRATIO 
									
							FROM CathHemodynamics CATH_TRGT INNER JOIN @CathCaseList AC ON CATH_TRGT.CathID = AC.CathID  
							INNER JOIN [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC ON AC.EMREventID = CATH_SRC.SURG_ENC_ID  
							WHERE AC.RowID = @i
							
							--UPDATE THE SOURCE RECORD RESETTING THE PENDING IMPORT FLAG TO 0
							UPDATE CATH_SRC 
							SET CATH_SRC.PendingImport = 0
							FROM [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC INNER JOIN @CathCaseList AC ON CATH_SRC.SURG_ENC_ID = AC.EMREventID  
							WHERE AC.RowID = @i
						
						COMMIT TRAN
						--COMMIT THE PENDING TRANSACTION IF NO ERRORS
						
						-- VALIDATE THE RECORD FOR THE END USER
						EXEC Validation_Call_ByTableEventID 'CathHemodynamics',@EventID,4,@DBVrsn;
					  END	
					END	TRY
					--IF ERROR IN TRANSACTION, PROVIDE ROLLBACK PROCEDURE
					BEGIN CATCH
						--PRINT 'BEGIN CATCH'
						IF @@TRANCOUNT > 0
							BEGIN
								--PRINT 'BEGIN ROLLBACK'
								
								ROLLBACK TRAN
								
								--PRINT 'BEGIN ERROR UPDATE'
								
								UPDATE CATH_SRC 
								SET CATH_SRC.PendingImport = 3
								FROM [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC INNER JOIN @CathCaseList AC ON CATH_SRC.SURG_ENC_ID = AC.EMREventID  
								WHERE AC.RowID = @i
								
								--PRINT 'END ERROR UPDATE'
								
								SELECT @ErrMsg = ERROR_MESSAGE(), @ErrSeverity = ERROR_SEVERITY()
								
								RAISERROR(@ErrMsg, @ErrSeverity, 1)
							END
					END CATCH
					
				END
			ELSE IF EXISTS(SELECT C.CathID FROM CathData C INNER JOIN @CathCaseList AC ON C.CathID = AC.CathID WHERE AC.RowID = @i)
				
				BEGIN TRY
				  BEGIN
					BEGIN TRAN
						INSERT INTO dbo.CathHemodynamics (CathID, SYSTEMICARTSATNA,	SYSTEMICARTSAT,	MIXVENSATNA,	MIXVENSAT,	SYSTEMVENTSYSPRESNA,	SYSTEMVENTSYSPRES,	SYSTEMVENTENDDIAPRESNA,	SYSTEMVENTENDDIAPRES,	SYSTEMSYSBPNA,	SYSTEMSYSBP,	SYSTEMDIABPNA,	SYSTEMDIABP,	SYSTEMMEANBPNA,	SYSTEMMEANBP,	PULMARTSYSPRESNA,	PULMARTSYSPRES,	PULMARTMEANPRESNA,	PULMARTMEANPRES,	PULMVENTSYSPRESNA,	PULMVENTSYSPRES,	PULMVASCRESTINDNA,	PULMVASCRESTIND,	CARDINDNA,	CARDIND,	QPQSRATIONA,	QPQSRATIO)
						SELECT AC.CathID, SYSTEMICARTSATNA,	SYSTEMICARTSAT,	MIXVENSATNA,	MIXVENSAT,	SYSTEMVENTSYSPRESNA,	SYSTEMVENTSYSPRES,	SYSTEMVENTENDDIAPRESNA,	SYSTEMVENTENDDIAPRES,	SYSTEMSYSBPNA,	SYSTEMSYSBP,	SYSTEMDIABPNA,	SYSTEMDIABP,	SYSTEMMEANBPNA,	SYSTEMMEANBP,	PULMARTSYSPRESNA,	PULMARTSYSPRES,	PULMARTMEANPRESNA,	PULMARTMEANPRES,	PULMVENTSYSPRESNA,	PULMVENTSYSPRES,	PULMVASCRESTINDNA,	PULMVASCRESTIND,	CARDINDNA,	CARDIND,	QPQSRATIONA,	QPQSRATIO
						FROM [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC INNER JOIN @CathCaseList AC ON AC.EMREventID = CATH_SRC.SURG_ENC_ID 
						WHERE AC.RowID = @i

						UPDATE CATH_SRC 
						SET CATH_SRC.PendingImport = 0
						FROM [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC INNER JOIN @CathCaseList AC ON CATH_SRC.SURG_ENC_ID = AC.EMREventID  
						WHERE AC.RowID = @i
					COMMIT TRAN
					--COMMIT THE PENDING TRANSACTION IF NO ERRORS
					
					-- VALIDATE THE RECORD FOR THE END USER
					EXEC Validation_Call_ByTableEventID 'CathHemodynamics',@EventID,4,@DBVrsn;
                   END
				END	TRY
				BEGIN CATCH
					IF @@TRANCOUNT > 0
						BEGIN
							ROLLBACK TRAN
							
							UPDATE CATH_SRC 
							SET CATH_SRC.PendingImport = 4
							FROM [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC INNER JOIN @CathCaseList AC ON CATH_SRC.SURG_ENC_ID = AC.EMREventID 
							WHERE AC.RowID = @i
							
							SELECT @ErrMsg = ERROR_MESSAGE(), @ErrSeverity = ERROR_SEVERITY()
							RAISERROR(@ErrMsg, @ErrSeverity, 1)

							
						END						
				END CATCH
			ELSE
				BEGIN
					UPDATE CATH_SRC 
					SET CATH_SRC.PendingImport = 2
					FROM [dbo].CHOP_IMPACT_CATHHEMODYNAMICS CATH_SRC INNER JOIN @CathCaseList AC ON CATH_SRC.SURG_ENC_ID = AC.EMREventID  
					WHERE AC.RowID = @i
					 
				END

			SET @i = @i + 1
		END
