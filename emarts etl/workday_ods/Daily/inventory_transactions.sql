{{ config(
    materialized = 'incremental',
    unique_key = 'inventory_transaction_wid',
    incremental_strategy = 'merge',
    merge_update_columns = ['inventory_transaction_wid','transaction_date','company_descriptor','company_wid','company_id','transaction_type_descriptor','transaction_type_wid','transaction_type_id','adjustment_reason_descriptor','inventory_adjustment_reason_wid','inventory_adjustment_reason_id','cost_center_descriptor','cost_center_wid','cost_center_id','inventory_return_line_descriptor','purchase_item_wid','purchase_item_id','purchase_item_description','inventory_location_descriptor','inventory_location_wid','inventory_location_id','inventory_site_descriptor','inventory_site_location_wid','inventory_site_location_id','quantity','unit_of_measure_descriptor','unit_cost','total_base_quantity_on_hand','base_unit_cost','unit_cost_in_base_currency','transaction_base_currency_conversion_rate','prior_average_cost','average_cost','currency_descriptor','accounting_date','accounting_date_for_operational_transaction','cost_markup','to___from_inventory_site_descriptor','to___from_inventory_site_wid','to___from_inventory_site_id','spend_category_descriptor','spend_category_wid','spend_category_id','initiated_by_descriptor','initiated_by_worker_wid','issued_to_descriptor','issued_to_worker_wid','requester_descriptor','requester_worker_wid','stock_request_line_descriptor','stock_request_line_wid','stock_request_line_id','stock_request_line_par_location_descriptor','stock_request_line_par_location_wid','stock_request_line_par_location_id','md5', 'upd_dt', 'upd_by']
) }}
select distinct
    inventory_transaction_wid,
    to_timestamp(substr(completed_on_date_local,1,10) || ' ' || substr(completed_on_date_local,12,8), 'yyyy-mm-dd hh:mi:ss') as transaction_date,
    company as company_descriptor,
    company_wid,
    company_id,
    transaction_type as transaction_type_descriptor,
    transaction_type_wid,
    transaction_type_id,
    adjustment_reason as adjustment_reason_descriptor,
    inventory_adjustment_reason_wid,
    inventory_adjustment_reason_id,
    cost_center as cost_center_descriptor,
    cost_center_wid,
    cost_center_id,
    inventory_return_line as inventory_return_line_descriptor,
    purchase_item_wid,
    purchase_item_id,
    substring(purchase_item_description, 1, 150) as purchase_item_description,
    inventory_location as inventory_location_descriptor,
    inventory_location_wid,
    inventory_location_id,
    inventory_site as inventory_site_descriptor,
    inventory_site_location_wid,
    inventory_site_location_id,
    quantity,
    unit_of_measure as unit_of_measure_descriptor,
    unit_cost,
    total_base_quantity_on_hand,
    base_unit_cost,
    unit_cost_in_base_currency,
    transaction_base_currency_conversion_rate,
    prior_average_cost,
    average_cost,
    currency as currency_descriptor,
    accounting_date,
    accounting_date_for_operational_transaction,
    cost_markup,
    to___from_inventory_site as to___from_inventory_site_descriptor,
    to___from_inventory_site_wid,
    to___from_inventory_site_id,
    spend_category_for_item as spend_category_descriptor,
    spend_category_wid,
    spend_category_id,
    initiated_by as initiated_by_descriptor,
    initiated_by_worker_wid,
    issued_to as issued_to_descriptor,
    issued_to_worker_wid,
    requester as requester_descriptor,
    requester_worker_wid,
    stock_request_line as stock_request_line_descriptor,
    stock_request_line_wid,
    stock_request_line_id,
    stock_request_line_par_location as stock_request_line_par_location_descriptor,
    stock_request_line_par_location_wid,
    stock_request_line_par_location_id,
    cast({{ 
        dbt_utils.surrogate_key([ 
            'inventory_transaction_wid',
            'transaction_date',
            'company_descriptor',
            'company_wid',
            'company_id',
            'transaction_type_descriptor',
            'transaction_type_wid',
            'transaction_type_id',
            'adjustment_reason_descriptor',
            'inventory_adjustment_reason_wid',
            'inventory_adjustment_reason_id',
            'cost_center_descriptor',
            'cost_center_wid',
            'cost_center_id',
            'inventory_return_line_descriptor',
            'purchase_item_wid',
            'purchase_item_id',
            'purchase_item_description',
            'inventory_location_descriptor',
            'inventory_location_wid',
            'inventory_location_id',
            'inventory_site_descriptor',
            'inventory_site_location_wid',
            'inventory_site_location_id',
            'quantity',
            'unit_of_measure_descriptor',
            'unit_cost',
            'total_base_quantity_on_hand',
            'base_unit_cost',
            'unit_cost_in_base_currency',
            'transaction_base_currency_conversion_rate',
            'prior_average_cost',
            'average_cost',
            'currency_descriptor',
            'accounting_date',
            'accounting_date_for_operational_transaction',
            'cost_markup',
            'to___from_inventory_site_descriptor',
            'to___from_inventory_site_wid',
            'to___from_inventory_site_id',
            'spend_category_descriptor',
            'spend_category_wid',
            'spend_category_id',
            'initiated_by_descriptor',
            'initiated_by_worker_wid',
            'issued_to_descriptor',
            'issued_to_worker_wid',
            'requester_descriptor',
            'requester_worker_wid',
            'stock_request_line_descriptor',
            'stock_request_line_wid',
            'stock_request_line_id',
            'stock_request_line_par_location_descriptor',
            'stock_request_line_par_location_wid',
            'stock_request_line_par_location_id'
        ]) 
    }} as varchar(100)) as md5,
    current_timestamp as create_dt,
    'WORKDAY' as create_by,
    current_timestamp as upd_dt,
    'WORKDAY' as upd_by
from
    {{source('workday_ods', 'workday_inventory_transactions')}} as workday_inventory_transactions
where
    1 = 1
    {%- if is_incremental() %}
        and md5 not in (
            select md5
            from
                {{ this }}
            where
                inventory_transaction_wid = workday_inventory_transactions.inventory_transaction_wid
            ) 
    {%- endif %}