WITH AR AS (
SELECT
V_CUBE_F_HB_AR_HISTORY.AR_DATE,
V_CUBE_F_HB_AR_HISTORY.HAR_ID,
V_CUBE_F_HB_AR_HISTORY.COLLECTION_STATUS,
V_CUBE_F_HB_AR_HISTORY.HAR_CREDIT_DEBIT,
V_CUBE_F_HB_AR_HISTORY.AR_AMOUNT,
HSP_ACCOUNT.ACCT_BILLED_DATE,
HSP_ACCOUNT.DISCH_DATE_TIME,
CASE WHEN HSP_ACCOUNT.DISCH_DATE_TIME > V_CUBE_F_HB_AR_HISTORY.AR_DATE OR HSP_ACCOUNT.DISCH_DATE_TIME IS NULL THEN 'In-House'
     WHEN HSP_ACCOUNT.ACCT_BILLED_DATE > V_CUBE_F_HB_AR_HISTORY.AR_DATE OR HSP_ACCOUNT.ACCT_BILLED_DATE IS NULL THEN 'DNB' ELSE 'DFB' END AS AGING_STATUS, 
CASE WHEN COLLECTION_STATUS = 'Bad Debt' THEN 0 ELSE AR_AMOUNT END AS AGED_AR,
CASE WHEN  HSP_ACCOUNT.DISCH_DATE_TIME IS NULL THEN -1 ELSE (V_CUBE_F_HB_AR_HISTORY.AR_DATE - HSP_ACCOUNT.DISCH_DATE_TIME) END AS AGING_DAYS
FROM V_CUBE_F_HB_AR_HISTORY 
JOIN HSP_ACCOUNT ON HSP_ACCOUNT.HSP_ACCOUNT_ID = V_CUBE_F_HB_AR_HISTORY.HAR_ID
WHERE AR_DATE between ADD_MONTHS(LAST_DAY(trunc(CURRENT_DATE,'month')),-15) AND ADD_MONTHS(LAST_DAY(trunc(CURRENT_DATE,'month')),-1)
),
aged_ar AS (
SELECT
AR_DATE,
HAR_ID,
HAR_CREDIT_DEBIT,
AGING_STATUS,
ROUND(AGING_DAYS) AS AGING_DAYS,
SUM(AGED_AR) AS DEBIT,
CASE WHEN HAR_CREDIT_DEBIT = 'Credit' then SUM(AGED_AR) END AS CREDIT
FROM 
AR
GROUP BY AR_DATE,HAR_ID,AGING_STATUS,AGING_DAYS,HAR_CREDIT_DEBIT
)

SELECT 
AR_DATE,
SUM(DEBIT) AS DEBIT,
SUM(CREDIT) AS CREDIT,
SUM(CREDIT*-1) + SUM(DEBIT) AS TOTAL_AR
FROM
aged_ar
GROUP BY AR_DATE
;