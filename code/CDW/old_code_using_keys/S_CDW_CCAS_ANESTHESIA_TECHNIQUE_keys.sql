--CREATE TABLE REGISTRY_STS_ANESTHESIA_TECHNIQUE
--AS

WITH ENCS AS 
(SELECT DISTINCT
       ANESLINK.OR_LOG_KEY
	   ,OR_LOG.LOG_KEY	
	   ,ANES_KEY
	   ,ANES_EVENT_VISIT_KEY
	   ,ANES_VISIT_KEY
	   ,OR_CASE.OR_CASE_KEY
	   ,OR_LOG_VISIT_KEY
	   ,PROC_VISIT_KEY
	   ,ANESLINK.VISIT_KEY
	   ,VSI_ANES.VSI_KEY ANES_VSI_KEY
	   ,VAI_HSP.VSI_KEY HSP_VAI_KEY
	   --,ANESLINK.ANES_START_TM ANES_START_DTTM
       ,PAT.PAT_MRN_ID
       ,OR_LOG.LOG_ID
	   ,TO_CHAR(ANESLINK.ANES_START_TM,'MM/DD/YYYY HH24:MI') ANES_START_DTTM
	   ,ANESLINK.ANES_START_TM ANES_START_TM  
	   ,ANESLINK.ANES_END_TM ANES_END_TM
	   ,COALESCE(TEE,2) TEE
	   ,INDUCT.INDUCT_TM
	   ,ISNULL(TO_CHAR(INDUCT.INDUCT_TM,'MM/DD/YYYY HH24:MI'),TO_CHAR(ANESLINK.ANES_START_TM,'MM/DD/YYYY HH24:MI')) INDUCTION_DTTM
	   ,ANESREADY.ANESREADY_TM
	   ,ANESSTOP.ANESSTOP_TM
	   ,PROCSTOP.PROCSTOP_TM
	   ,TO_CHAR(ANESREADY.ANESREADY_TM,'MM/DD/YYYY HH24:MI') ANES_READY_DTTM
	   ,COALESCE(HANDOFF.HANDOFF_TM,ANESSTOP_TM) HANDOFF_TM
	   ,TO_CHAR(HANDOFF.HANDOFF_TM,'MM/DD/YYYY HH24:MI') HANDOFF_DTTM
	   ,ANES_STOP_DOC.ANES_STOP_DOC_TM
FROM  ANESTHESIA_ENCOUNTER_LINK ANESLINK INNER JOIN OR_CASE ON ANESLINK.OR_CASE_KEY = OR_CASE.OR_CASE_KEY
                                         INNER JOIN OR_LOG ON OR_CASE.LOG_KEY = OR_LOG.LOG_KEY
										 LEFT JOIN VISIT_ADDL_INFO VAI_HSP ON VAI_HSP.VISIT_KEY = ANESLINK.VISIT_KEY
										 LEFT JOIN VISIT_STAY_INFO VSI_ANES ON VSI_ANES.VISIT_KEY = ANESLINK.ANES_VISIT_KEY
										 LEFT JOIN PATIENT PAT ON PAT.PAT_KEY = OR_CASE.PAT_KEY
										 JOIN or_log_anes_staff ANESSTAFF ON ANESSTAFF.LOG_KEY = OR_LOG.LOG_KEY
										 JOIN CDW_DICTIONARY SERVICE ON SERVICE.DICT_KEY = OR_CASE.DICT_OR_SVC_KEY
										 LEFT JOIN (SELECT 1 TEE ,VISIT_KEY FROM VISIT_ED_EVENT EVT JOIN MASTER_EVENT_TYPE EVTTYPE ON EVT.EVENT_TYPE_KEY = EVTTYPE.EVENT_TYPE_KEY WHERE EVTTYPE.EVENT_ID = '1120000051') TEE ON TEE.VISIT_KEY = ANESLINK.ANES_VISIT_KEY
										 LEFT JOIN (SELECT VISIT_KEY, MAX(EVENT_DT) INDUCT_TM FROM VISIT_ED_EVENT EVT JOIN MASTER_EVENT_TYPE EVTTYPE ON EVT.EVENT_TYPE_KEY = EVTTYPE.EVENT_TYPE_KEY WHERE EVTTYPE.EVENT_ID = '1120000008' group by VISIT_KEY) INDUCT ON INDUCT.VISIT_KEY = ANESLINK.ANES_VISIT_KEY
										 LEFT JOIN (SELECT VISIT_KEY, MAX(EVENT_DT) ANESREADY_TM FROM VISIT_ED_EVENT EVT JOIN MASTER_EVENT_TYPE EVTTYPE ON EVT.EVENT_TYPE_KEY = EVTTYPE.EVENT_TYPE_KEY WHERE EVTTYPE.EVENT_ID = '1120000049' group by VISIT_KEY) ANESREADY ON ANESREADY.VISIT_KEY = ANESLINK.ANES_VISIT_KEY
										 LEFT JOIN (SELECT VISIT_KEY, MAX(EVENT_DT) ANESSTOP_TM FROM VISIT_ED_EVENT EVT JOIN MASTER_EVENT_TYPE EVTTYPE ON EVT.EVENT_TYPE_KEY = EVTTYPE.EVENT_TYPE_KEY WHERE EVTTYPE.EVENT_ID = '1120000002' group by VISIT_KEY) ANESSTOP ON ANESSTOP.VISIT_KEY = ANESLINK.ANES_VISIT_KEY  
										 LEFT JOIN (SELECT VISIT_KEY, MAX(EVENT_DT) PROCSTOP_TM FROM VISIT_ED_EVENT EVT JOIN MASTER_EVENT_TYPE EVTTYPE ON EVT.EVENT_TYPE_KEY = EVTTYPE.EVENT_TYPE_KEY WHERE EVTTYPE.EVENT_ID = '100248' group by VISIT_KEY) PROCSTOP ON PROCSTOP.VISIT_KEY = ANESLINK.ANES_VISIT_KEY 
										 LEFT JOIN (SELECT VISIT_KEY, MAX(EVENT_DT) HANDOFF_TM FROM VISIT_ED_EVENT EVT JOIN MASTER_EVENT_TYPE EVTTYPE ON EVT.EVENT_TYPE_KEY = EVTTYPE.EVENT_TYPE_KEY WHERE EVTTYPE.EVENT_ID = '1120000046' group by VISIT_KEY) HANDOFF ON HANDOFF.VISIT_KEY = ANESLINK.ANES_VISIT_KEY
								     	 LEFT JOIN (SELECT VISIT_KEY, MAX(EVENT_DT) ANES_STOP_DOC_TM FROM VISIT_ED_EVENT EVT JOIN MASTER_EVENT_TYPE EVTTYPE ON EVT.EVENT_TYPE_KEY = EVTTYPE.EVENT_TYPE_KEY WHERE EVTTYPE.EVENT_ID = '1120000015' group by VISIT_KEY) ANES_STOP_DOC ON ANES_STOP_DOC.VISIT_KEY = ANESLINK.ANES_VISIT_KEY 
WHERE 1=1
  AND SERVICE.SRC_ID = 910 --Cardiac Service 
 )
 
 , INDUCT_MEDS AS 
(SELECT INDUCTMED.VISIT_KEY
       ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%TRACH%' OR UPPER(DICT_NM) LIKE '%MASK%' THEN 1 ELSE 2 END) AS INHALATION
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%TRACH%' OR UPPER(DICT_NM) LIKE '%MASK%'
	              AND UPPER(MED_ORD_NM) LIKE '%SEVOFLURANE%' THEN 1 ELSE 2 END) AS INH_SEVOFLURANE
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%TRACH%' OR UPPER(DICT_NM) LIKE '%MASK%'
	              AND UPPER(MED_ORD_NM) LIKE '%ISOFLURANE%' THEN 1 ELSE 2 END) AS INH_ISOFLURANE
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%' THEN 1 ELSE 2 END) AS INTRAVENOUS
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%SODIUM THIOPENTAL%' THEN 1 ELSE 2 END) AS INTV_SODIUM_THIO
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%KETAMINE%' THEN 1 ELSE 2 END) AS INTV_KETAMINE
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%ETOMIDATE%' THEN 1 ELSE 2 END) AS INTV_ETOMIDATE
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%PROPOFOL%' THEN 1 ELSE 2 END) AS INTV_PROPOFOL
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%FENTANYL%' THEN 1 ELSE 2 END) AS INTV_FENTANYL
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%MIDAZOLAM%' THEN 1 ELSE 2 END) AS INTV_MIDAZOLAM
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%DEXEMEDETOMIDINE%' THEN 1 ELSE 2 END) AS INTV_DEXEMEDETOMIDINE
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%SUFENTANIL%' THEN 1 ELSE 2 END) AS INTV_SUFENTANIL
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAVENOUS%'
	              AND UPPER(MED_ORD_NM) LIKE '%REMIFENTANIL%' THEN 1 ELSE 2 END) AS INTV_REMIFENTANIL
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAMUSCULAR%' THEN 1 ELSE 2 END) AS INTRAMUSCULAR
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAMUSCULAR%'
	              AND UPPER(MED_ORD_NM) LIKE '%KETAMINE%' THEN 1 ELSE 2 END) AS INTRA_KETAMINE
	   ,MIN(CASE WHEN UPPER(DICT_NM) LIKE '%INTRAMUSCULAR%'
	              AND UPPER(MED_ORD_NM) LIKE '%MIDAZOLAM%' THEN 1 ELSE 2 END) AS INTRA_MIDAZOLAM
FROM  ENCS JOIN MEDICATION_ADMINISTRATION INDUCTMED ON  INDUCTMED.VISIT_KEY = ENCS.ANES_VISIT_KEY and INDUCTMED.ACTION_DT BETWEEN ENCS.ANES_START_TM AND ENCS.ANESREADY_TM 
           JOIN MEDICATION_ORDER MEDORD ON MEDORD.MED_ORD_KEY = INDUCTMED.MED_ORD_KEY  
		   LEFT JOIN CDW_DICTIONARY ROUTE ON ROUTE.DICT_KEY = INDUCTMED.DICT_RTE_KEY
GROUP BY INDUCTMED.VISIT_KEY
)

,REGANES AS
(select DISTINCT 
       ENCS.ANES_VISIT_KEY
      ,1 AS REGIONAL_ANES
 	  ,MIN(CASE WHEN UPPER(ELEM_VAL) LIKE '%THORACIC EPIDURAL%' THEN 585
	        WHEN UPPER(ELEM_VAL) LIKE '%LUMBAR EPIDURAL%' THEN 586
			WHEN UPPER(ELEM_VAL) LIKE '%CAUDAL EPIDURAL%' THEN 587
		    WHEN UPPER(ELEM_VAL) LIKE '%LUMBAR EPIDURAL%' AND UPPER(ELEM_VAL) LIKE '%SHOT%' THEN 588
			WHEN UPPER(ELEM_VAL) LIKE '%CAUDAL (SACRAL)%' OR UPPER(ELEM_VAL) LIKE '%CAUDAL (LUMBAR)%' OR UPPER(ELEM_VAL) LIKE '%CAUDAL (THORACIC)%' THEN 589
			WHEN UPPER(ELEM_VAL) LIKE '%INTRATHECAL%' OR UPPER(ELEM_VAL) LIKE '%SUBARACHNOID (SPINAL)%' THEN 590
		    WHEN UPPER(ELEM_VAL) LIKE '%PARAVERTEBRAL%' AND UPPER(ELEM_VAL) LIKE '%SHOT%' THEN 3712
			WHEN UPPER(ELEM_VAL) LIKE '%PARAVERTEBRAL%' AND UPPER(ELEM_VAL) LIKE '%CATHETER%' THEN 3713
			WHEN UPPER(CONCEPT_DESC) <> 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) NOT LIKE '%LUMBAR%' 
			                                                          AND UPPER(ELEM_VAL) NOT LIKE '%CAUDAL%'
																	  AND UPPER(ELEM_VAL) NOT LIKE '%INTRATHECAL%' 
																	  AND UPPER(ELEM_VAL) NOT LIKE '%SUBARACHNOID%' 
																	  AND UPPER(ELEM_VAL) NOT LIKE '%PARAVERTEBRAL%' 
																	  THEN 3036
		END) AS REGANESSITE --
		,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%BUPIVACAINE%' THEN 1 ELSE 2 END) AS REGANESDRUGBUP
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%BUPIVICAINE%%FENTANYL' THEN 1 ELSE 2 END) AS REGANESDRUGBUPFEN
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%CLONIDINE%' THEN 1 ELSE 2 END) AS REGANESDRUGCLON
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%FENTANYL%' THEN 1 ELSE 2 END) AS REGANESDRUGFEN
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%HYDROMORPHONE%' THEN 1 ELSE 2 END) AS REGANESDRUGHYDRO
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%LIDOCAINE%' THEN 1 ELSE 2 END) AS REGANESDRUGLIDO
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%MORPHINE%' THEN 1 ELSE 2 END) AS REGANESDRUGMORPH
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%ROPIVICAINE%' THEN 1 ELSE 2 END) AS REGANESDRUGROP
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%ROPIVICAINE%%FENTANYL%' THEN 1 ELSE 2 END) AS REGANESDRUGROPFEN
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) LIKE '%TETRACAINE%' THEN 1 ELSE 2 END) AS REGANESDRUGTETRA
      	,MIN(CASE WHEN UPPER(CONCEPT_DESC) = 'ANES BLOCK LOCAL ANESTHETIC' AND UPPER(ELEM_VAL) NOT LIKE '%BUPIVACAINE%' 
		                                                               AND UPPER(ELEM_VAL) NOT LIKE '%CLONIDINE%'
																	   AND UPPER(ELEM_VAL) NOT LIKE '%FENTANYL%'
																	   AND UPPER(ELEM_VAL) NOT LIKE '%HYDROMORPHONE%'
																	   AND UPPER(ELEM_VAL) NOT LIKE '%LIDOCAINE%'
																	   AND UPPER(ELEM_VAL) NOT LIKE '%MORPHINE%'
																	   AND UPPER(ELEM_VAL) NOT LIKE '%ROPIVACAINE%'
																	   AND UPPER(ELEM_VAL) NOT LIKE '%TETRACAINE%'
																	   THEN 1 ELSE 2 END) AS REGANESDRUGOTH 
     
from ENCS
	join CDW.PROCEDURE_ORDER po on ENCS.ANES_VISIT_KEY = po.VISIT_KEY
	join CDW.SMART_DATA_ELEMENT sde on po.PROC_ORD_KEY = sde.PROC_ORD_KEY
	join CDW.CLINICAL_CONCEPT cc on sde.CONCEPT_KEY = cc.CONCEPT_KEY
WHERE 1=1
  AND ((UPPER(PROC_ORD_DESC) LIKE '%BLOCK%' AND UPPER(PROC_ORD_DESC) LIKE '%NEURAXIAL%') OR
       (UPPER(PROC_ORD_DESC) LIKE '%BLOCK%' AND UPPER(PROC_ORD_DESC) LIKE '%GENERAL%') )
  AND ((UPPER(CONCEPT_DESC) LIKE '%BLOCK%' AND UPPER(CONCEPT_DESC) LIKE '%NEURAXIAL%') OR
       (UPPER(CONCEPT_DESC) LIKE '%BLOCK%' AND UPPER(CONCEPT_DESC) LIKE '%GENERAL%') )
  OR (CC.CONCEPT_DESC = 'ANES BLOCK LOCAL ANESTHETIC')
GROUP BY 1,2
)	

 SELECT 
		cast(ISNULL(LOG_ID,'') as integer) CaseNumber
		,INDUCT_TM InductionDT
		,CAST(INHALATION AS INTEGER) IndTypeInh
		,CAST(INH_SEVOFLURANE AS INTEGER) IndAgentInhalSevo
		,CAST(INH_ISOFLURANE AS INTEGER) IndAgentInhalIso
		,CAST(INTRAVENOUS AS INTEGER) IndTypeIV
		,CAST(INTV_SODIUM_THIO AS INTEGER) IndAgentIVSodT
		,CAST(INTV_KETAMINE AS INTEGER) IndAgentIVKet
		,CAST(INTV_ETOMIDATE AS INTEGER) IndAgentIVEtom
		,CAST(INTV_PROPOFOL AS INTEGER) IndAgentIVProp
		,CAST(INTV_FENTANYL AS INTEGER) IndAgentIVFent
		,CAST(INTV_MIDAZOLAM AS INTEGER) IndAgentIVMid
		,CAST(INTV_DEXEMEDETOMIDINE AS INTEGER) IndAgentIVDex
		,CAST(INTV_SUFENTANIL AS INTEGER) IndAgentIVSuf
		,CAST(INTV_REMIFENTANIL AS INTEGER) IndAgentIVRem
		,CAST(INTRAMUSCULAR AS INTEGER) IndTypeIM
		,CAST(INTRA_KETAMINE AS INTEGER) IndAgentIMKet
		,CAST(INTRA_MIDAZOLAM AS INTEGER) IndAgentIMMid
		,CAST(ISNULL(REGIONAL_ANES,2) AS INTEGER) RegionalAnes
		,CAST(REGANESSITE AS INTEGER) REGANESSITE
		,CAST(REGANESDRUGBUP AS INTEGER) REGANESDRUGBUP
		,CAST(REGANESDRUGBUPFEN AS INTEGER) REGANESDRUGBUPFEN
		,CAST(REGANESDRUGCLON AS INTEGER) REGANESDRUGCLON
		,CAST(REGANESDRUGFEN AS INTEGER) REGANESDRUGFEN
		,CAST(REGANESDRUGHYDRO AS INTEGER) REGANESDRUGHYDRO
		,CAST(REGANESDRUGLIDO AS INTEGER) REGANESDRUGLIDO
		,CAST(REGANESDRUGMORPH AS INTEGER) REGANESDRUGMORPH
		,CAST(REGANESDRUGROP AS INTEGER) REGANESDRUGROP
		,CAST(REGANESDRUGROPFEN AS INTEGER) REGANESDRUGROPFEN
		,CAST(REGANESDRUGTETRA AS INTEGER) REGANESDRUGTETRA
		,CAST(REGANESDRUGOTH AS INTEGER) REGANESDRUGOTH
     
FROM		
		(SELECT *
		FROM ENCS    LEFT JOIN INDUCT_MEDS ON INDUCT_MEDS.VISIT_KEY = ENCS.ANES_VISIT_KEY
					 LEFT JOIN REGANES ON REGANES.ANES_VISIT_KEY = ENCS.ANES_VISIT_KEY
			) ENC
			
			ORDER BY 1