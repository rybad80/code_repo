/*
PENDING IMPORT ID LEGEND
	0 = IMPORT SUCCESSFUL
	1 = SOURCE RECORD WAS UPDATED AND WAITING FOR DATA UPLOAD TO DESTINATION DB
	2 = NO MATCHING CASE EXISTS IN DESTINATION DB (CASES.CASELINKNUM)
	3 = ERROR UPDATING DESTINATION RECORD
	4 = ERROR INSERTING DESTINATION RECORD
*/
CREATE OR ALTER PROCEDURE sp_CHOP_CCAS_ANESTHESIA_PROCOAGULANTS   as


DECLARE @i int 
DECLARE @numrows int 
DECLARE @EventID int, @DBVrsn varchar(5), @AnesthesiaFK int
DECLARE @AnestCaseList TABLE (CaseNumber int, CaseLinkNum int, DBVrsn varchar(5), RowID int)
DECLARE @ErrMsg nvarchar(4000), @ErrSeverity int


							
	SET NOCOUNT ON 
	
	INSERT INTO @AnestCaseList(CaseNumber, CaselinkNum, DBVrsn, RowID)
	SELECT CaseNumber, ANEST_SRC.CASELINKNUM, C.CDataVrsn, ROW_NUMBER() OVER (ORDER BY CaseNumber) 
	FROM [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC INNER JOIN dbo.Cases C ON ANEST_SRC.CaseLinkNum = C.CaseLinkNum 
	WHERE PendingImport IN (1,2)   --This is to test an individual record
	ORDER BY CaseNumber
		
	SELECT @numrows = @@RowCount, @i = 1
	WHILE (@i <= @numrows) 
		BEGIN
			SELECT @EventID = CaseNumber, @DBVrsn = DBVrsn, @AnesthesiaFK = CaseLinkNum FROM @AnestCaseList AC WHERE AC.RowID = @i

			IF EXISTS(SELECT APM.CaseNumber FROM Procoagulants APM WHERE APM.CaseNumber = @EventID)  
				BEGIN
					BEGIN TRY
					  BEGIN
						--BEGIN THE TRANSACTION
						BEGIN TRAN
							--UPDATE THE TARGET RECORD
							UPDATE ANEST_TRGT
							SET ANEST_TRGT.PROCOAGUSAGE=ANEST_SRC.PROCOAGUSAGE,
							    ANEST_TRGT.PROCOAGFACTORVIIA=ANEST_SRC.PROCOAGFACTORVIIA,
							    ANEST_TRGT.PROCOAGFACTORVIIA1=ANEST_SRC.PROCOAGFACTORVIIA1,
								ANEST_TRGT.PROCOAGFACTORVIIA2=ANEST_SRC.PROCOAGFACTORVIIA2,
							    ANEST_TRGT.PROCOAGFACTORVIIA3=ANEST_SRC.PROCOAGFACTORVIIA3,
								ANEST_TRGT.PROCMPLXCON4=ANEST_SRC.PROCMPLXCON4,
								ANEST_TRGT.PROCMPLXCON4DS1=ANEST_SRC.PROCMPLXCON4DS1,
								ANEST_TRGT.PROCMPLXCON4DS2=ANEST_SRC.PROCMPLXCON4DS2,
								ANEST_TRGT.PROCMPLXCON4DS3=ANEST_SRC.PROCMPLXCON4DS3,
								ANEST_TRGT.PROCMPLXCON4W7A=ANEST_SRC.PROCMPLXCON4W7A,
								ANEST_TRGT.PROCMPLXCON4W7A1=ANEST_SRC.PROCMPLXCON4W7A1,
								ANEST_TRGT.PROCMPLXCON4W7A2=ANEST_SRC.PROCMPLXCON4W7A2,
								ANEST_TRGT.PROCMPLXCON4W7A3=ANEST_SRC.PROCMPLXCON4W7A3,
								ANEST_TRGT.PROCMPLXCON3=ANEST_SRC.PROCMPLXCON3,
								ANEST_TRGT.PROCMPLXCON3DS1=ANEST_SRC.PROCMPLXCON3DS1,
								ANEST_TRGT.PROCMPLXCON3DS2=ANEST_SRC.PROCMPLXCON3DS2,
								ANEST_TRGT.PROCMPLXCON3DS3=ANEST_SRC.PROCMPLXCON3DS3,
								ANEST_TRGT.OCTAPLEX=ANEST_SRC.OCTAPLEX,
								ANEST_TRGT.OCTAPLEXDS1=ANEST_SRC.OCTAPLEXDS1,
								ANEST_TRGT.OCTAPLEXDS2=ANEST_SRC.OCTAPLEXDS2,
								ANEST_TRGT.OCTAPLEXDS3=ANEST_SRC.OCTAPLEXDS3,
								ANEST_TRGT.PROCOAGFIBRIN=ANEST_SRC.PROCOAGFIBRIN,
								ANEST_TRGT.PROCOAGFIBRIN1=ANEST_SRC.PROCOAGFIBRIN1,
								ANEST_TRGT.PROCOAGFIBRIN2=ANEST_SRC.PROCOAGFIBRIN2,
								ANEST_TRGT.PROCOAGFIBRIN3=ANEST_SRC.PROCOAGFIBRIN3,
								ANEST_TRGT.PROCOAGANTITHROM=ANEST_SRC.PROCOAGANTITHROM,
								ANEST_TRGT.PROCOAGANTITHROM1=ANEST_SRC.PROCOAGANTITHROM1,
								ANEST_TRGT.PROCOAGANTITHROM2=ANEST_SRC.PROCOAGANTITHROM2,
								ANEST_TRGT.PROCOAGANTITHROM3=ANEST_SRC.PROCOAGANTITHROM3,
								ANEST_TRGT.PROCOAGDESMO=ANEST_SRC.PROCOAGDESMO,
								ANEST_TRGT.PROCOAGDESMO1=ANEST_SRC.PROCOAGDESMO1,
								ANEST_TRGT.PROCOAGDESMO2=ANEST_SRC.PROCOAGDESMO2,
								ANEST_TRGT.PROCOAGDESMO3=ANEST_SRC.PROCOAGDESMO3,
								LastUpdate = GetDate(), 
								UpdatedBy = 'CHOP_AUTOMATION'
							FROM Procoagulants ANEST_TRGT INNER JOIN @AnestCaseList AC ON ANEST_TRGT.CaseNumber = AC.CaseNumber  
							INNER JOIN [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC ON AC.CaseLinkNum = ANEST_SRC.CASELINKNUM  
							WHERE AC.RowID = @i
							
							--UPDATE THE SOURCE RECORD RESETTING THE PENDING IMPORT FLAG TO 0
							UPDATE ANEST_SRC 
							SET ANEST_SRC.PendingImport = 0
							FROM [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC INNER JOIN @AnestCaseList AC ON ANEST_SRC.CASELINKNUM = AC.CaseLinkNum  
							WHERE AC.RowID = @i
						
						COMMIT TRAN
						--COMMIT THE PENDING TRANSACTION IF NO ERRORS
						
						-- VALIDATE THE RECORD FOR THE END USER
						EXEC Validation_Call_ByTableEventID 'Procoagulants',@EventID,1,@DBVrsn;
					 END
					END	TRY
					--IF ERROR IN TRANSACTION, PROVIDE ROLLBACK PROCEDURE
					BEGIN CATCH
						--PRINT 'BEGIN CATCH'
						IF @@TRANCOUNT > 0
							BEGIN
								--PRINT 'BEGIN ROLLBACK'
								
								ROLLBACK TRAN
								
								--PRINT 'BEGIN ERROR UPDATE'
								
								UPDATE ANEST_SRC 
								SET ANEST_SRC.PendingImport = 3
								FROM [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC INNER JOIN @AnestCaseList AC ON ANEST_SRC.CASELINKNUM = AC.CaseLinkNum  
								WHERE AC.RowID = @i
								
								--PRINT 'END ERROR UPDATE'
								
								SELECT @ErrMsg = ERROR_MESSAGE(), @ErrSeverity = ERROR_SEVERITY()
								
								RAISERROR(@ErrMsg, @ErrSeverity, 1)
							END
					END CATCH
					
				END
			ELSE IF EXISTS(SELECT C.CaseNumber FROM Cases C INNER JOIN @AnestCaseList AC ON C.CaseNumber = AC.CaseNumber WHERE AC.RowID = @i)
				
				BEGIN TRY
				  BEGIN
					BEGIN TRAN
						INSERT INTO dbo.Procoagulants (Casenumber,PROCOAGUSAGE,PROCOAGFACTORVIIA,PROCOAGFACTORVIIA1,PROCOAGFACTORVIIA2,PROCOAGFACTORVIIA3,PROCMPLXCON4,PROCMPLXCON4DS1,PROCMPLXCON4DS2,PROCMPLXCON4DS3,
	                            PROCMPLXCON4W7A,PROCMPLXCON4W7A1,PROCMPLXCON4W7A2,PROCMPLXCON4W7A3,PROCMPLXCON3,PROCMPLXCON3DS1, PROCMPLXCON3DS2,PROCMPLXCON3DS3,OCTAPLEX,OCTAPLEXDS1,
							    OCTAPLEXDS2,OCTAPLEXDS3,PROCOAGFIBRIN,PROCOAGFIBRIN1,PROCOAGFIBRIN2,PROCOAGFIBRIN3,PROCOAGANTITHROM,PROCOAGANTITHROM1,PROCOAGANTITHROM2,PROCOAGANTITHROM3,
	                            PROCOAGDESMO,PROCOAGDESMO1,PROCOAGDESMO2,PROCOAGDESMO3,CreateDate,LastUpdate,UpdatedBy)
						SELECT  AC.CaseNumber,PROCOAGUSAGE,PROCOAGFACTORVIIA,PROCOAGFACTORVIIA1,PROCOAGFACTORVIIA2,PROCOAGFACTORVIIA3,PROCMPLXCON4,PROCMPLXCON4DS1,	PROCMPLXCON4DS2,PROCMPLXCON4DS3,
	                            PROCMPLXCON4W7A,PROCMPLXCON4W7A1,PROCMPLXCON4W7A2,PROCMPLXCON4W7A3,PROCMPLXCON3,PROCMPLXCON3DS1, PROCMPLXCON3DS2,PROCMPLXCON3DS3,OCTAPLEX,OCTAPLEXDS1,
							    OCTAPLEXDS2,OCTAPLEXDS3,PROCOAGFIBRIN,PROCOAGFIBRIN1,PROCOAGFIBRIN2,PROCOAGFIBRIN3,PROCOAGANTITHROM,PROCOAGANTITHROM1,PROCOAGANTITHROM2,PROCOAGANTITHROM3,
	                            PROCOAGDESMO,PROCOAGDESMO1,PROCOAGDESMO2,PROCOAGDESMO3,GetDate(), GetDate(), 'CHOP_AUTOMATION' 
						FROM [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC INNER JOIN @AnestCaseList AC ON AC.CaseLinkNum = ANEST_SRC.CASELINKNUM 
						WHERE AC.RowID = @i

						UPDATE ANEST_SRC 
						SET ANEST_SRC.PendingImport = 0
						FROM [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC INNER JOIN @AnestCaseList AC ON ANEST_SRC.CASELINKNUM = AC.CaseLinkNum  
						WHERE AC.RowID = @i
					COMMIT TRAN
					--COMMIT THE PENDING TRANSACTION IF NO ERRORS
					
					-- VALIDATE THE RECORD FOR THE END USER
					EXEC Validation_Call_ByTableEventID 'Procoagulants',@EventID,1,@DBVrsn;
                  END
				END	TRY
				BEGIN CATCH
					IF @@TRANCOUNT > 0
						BEGIN
							ROLLBACK TRAN
							
							UPDATE ANEST_SRC 
							SET ANEST_SRC.PendingImport = 4
							FROM [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC INNER JOIN @AnestCaseList AC ON ANEST_SRC.CASELINKNUM = AC.CaseLinkNum 
							WHERE AC.RowID = @i
							
							SELECT @ErrMsg = ERROR_MESSAGE(), @ErrSeverity = ERROR_SEVERITY()
							RAISERROR(@ErrMsg, @ErrSeverity, 1)

							
						END						
				END CATCH
			ELSE
				BEGIN
					UPDATE ANEST_SRC 
					SET ANEST_SRC.PendingImport = 2
					FROM [dbo].[CHOP_CCAS_ANESTHESIA_PROCOAGULANTS] ANEST_SRC INNER JOIN @AnestCaseList AC ON ANEST_SRC.CASELINKNUM = AC.CaseLinkNum  
					WHERE AC.RowID = @i
					 
				END

			SET @i = @i + 1
		END
